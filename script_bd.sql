create database if NOT EXISTS enade;
use enade;

drop table if EXISTS NOTAS;
CREATE TABLE NOTAS
( 
 CO_NOTA INTEGER AUTO_INCREMENT PRIMARY KEY,
 NU_ANO INTEGER,
 CO_IES INTEGER,
 CO_MUNIC_CURSO INTEGER,  
 CO_ALUNO INTEGER,  
 TP_PRES INTEGER,  
 TP_PR_GER INTEGER,  
 TP_PR_OB_FG INTEGER,  
 TP_PR_DI_FG INTEGER,  
 TP_PR_OB_CE INTEGER,  
 TP_PR_DI_CE INTEGER,  
 NT_GER FLOAT,  
 NT_FG FLOAT,  
 NT_OBJ_FG FLOAT,  
 NT_DIS_FG FLOAT,  
 NT_CE FLOAT,  
 NT_OBJ_CE FLOAT,  
 NT_DIS_CE FLOAT,  
 CO_RS_I1 VARCHAR(20),  
 CO_RS_I2 VARCHAR(20),  
 CO_RS_I3 VARCHAR(20),  
 CO_RS_I4 VARCHAR(20),  
 CO_RS_I5 VARCHAR(20),  
 CO_RS_I6 VARCHAR(20),  
 CO_RS_I7 VARCHAR(20),  
 CO_RS_I8 VARCHAR(20),  
 CO_RS_I9 VARCHAR(20),   
 CO_CURSO INTEGER,  
 CO_MODALIDADE INTEGER,  
 CO_GRUPO INTEGER,  
 CO_TURNO_GRADUACAO INTEGER,  
 CO_CATEGAD INTEGER
); 

drop table if EXISTS ALUNO;
CREATE TABLE ALUNO 
( 
 CO_ALUNO INTEGER PRIMARY KEY,  
 NU_IDADE INTEGER,  
 TP_SEXO VARCHAR(1),  
 ANO_FIM_EM INTEGER,  
 ANO_IN_GRAD INTEGER
); 

drop table if EXISTS MUNICIPIO;
CREATE TABLE MUNICIPIO 
( 
 CO_MUNIC_CURSO INTEGER PRIMARY KEY,  
 NM_MUNICIPIO VARCHAR(50),  
 NM_UF VARCHAR(50),  
 NM_REGIAO VARCHAR(50)  
); 

drop table if EXISTS PRESENCA;
CREATE TABLE PRESENCA 
( 
 CO_PRESENCA INTEGER PRIMARY KEY,  
 NM_PRESENCA VARCHAR(50)  
); 

drop table if EXISTS ORGANIZACAO;
CREATE TABLE ORGANIZACAO 
( 
 CO_IES INTEGER PRIMARY KEY,  
 NM_IES TEXT 
); 

drop table if EXISTS CURSO;
CREATE TABLE CURSO 
( 
 CO_CURSO INTEGER PRIMARY KEY,  
 NM_CURSO TEXT  
); 

drop table if EXISTS MODALIDADE;
CREATE TABLE MODALIDADE 
( 
 CO_MODALIDADE INTEGER PRIMARY KEY,  
 NM_MODALIDADE VARCHAR(50)
); 

drop table if EXISTS GRUPO;
CREATE TABLE GRUPO 
( 
 CO_GRUPO INTEGER PRIMARY KEY,  
 NM_GRUPO TEXT
); 

drop table if EXISTS QUESTIONARIO;
CREATE TABLE QUESTIONARIO 
( 
 CO_QUEST VARCHAR(20) PRIMARY KEY,  
 NM_QUEST VARCHAR(50)  
); 

drop table if EXISTS TURNO;
CREATE TABLE TURNO 
( 
 CO_TURNO_GRADUACAO INTEGER PRIMARY KEY,  
 NM_TURNO_GRADUACAO VARCHAR(50)
); 

drop table if EXISTS CATEGORIA;
CREATE TABLE CATEGORIA 
( 
 CO_CATEGAD INTEGER PRIMARY KEY,  
 NM_CATEGAD VARCHAR(50) 
); 

ALTER TABLE NOTAS
ADD CONSTRAINT FK_ORG
FOREIGN KEY (CO_IES) REFERENCES ORGANIZACAO(CO_IES);

ALTER TABLE NOTAS
ADD CONSTRAINT FK_ALUNO
FOREIGN KEY (CO_ALUNO) REFERENCES ALUNO(CO_ALUNO);

ALTER TABLE NOTAS
ADD CONSTRAINT FK_MUN
FOREIGN KEY (CO_MUNIC_CURSO) REFERENCES MUNICIPIO(CO_MUNIC_CURSO);

ALTER TABLE NOTAS
ADD CONSTRAINT FK_CURSO
FOREIGN KEY (CO_CURSO) REFERENCES CURSO(CO_CURSO);

ALTER TABLE NOTAS
ADD CONSTRAINT FK_MODALIDADE
FOREIGN KEY (CO_MODALIDADE) REFERENCES MODALIDADE(CO_MODALIDADE);

ALTER TABLE NOTAS
ADD CONSTRAINT FK_CATEGORIA
FOREIGN KEY (CO_CATEGAD) REFERENCES CATEGORIA(CO_CATEGAD);

ALTER TABLE NOTAS
ADD CONSTRAINT FK_TURNO
FOREIGN KEY (CO_TURNO_GRADUACAO) REFERENCES TURNO(CO_TURNO_GRADUACAO);

ALTER TABLE NOTAS
ADD CONSTRAINT FK_TP_PRES
FOREIGN KEY (TP_PRES) REFERENCES PRESENCA(CO_PRESENCA);

ALTER TABLE NOTAS
ADD CONSTRAINT FK_TP_PR_GER
FOREIGN KEY (TP_PR_GER) REFERENCES PRESENCA(CO_PRESENCA);

ALTER TABLE NOTAS
ADD CONSTRAINT FK_TP_PR_OB_FG
FOREIGN KEY (TP_PR_OB_FG) REFERENCES PRESENCA(CO_PRESENCA);

ALTER TABLE NOTAS
ADD CONSTRAINT FK_TP_PR_DI_FG
FOREIGN KEY (TP_PR_DI_FG) REFERENCES PRESENCA(CO_PRESENCA);

ALTER TABLE NOTAS
ADD CONSTRAINT FK_TP_PR_OB_CE
FOREIGN KEY (TP_PR_OB_CE) REFERENCES PRESENCA(CO_PRESENCA);

ALTER TABLE NOTAS
ADD CONSTRAINT FK_TP_PR_DI_CE
FOREIGN KEY (TP_PR_DI_CE) REFERENCES PRESENCA(CO_PRESENCA);

ALTER TABLE NOTAS
ADD CONSTRAINT FK_CO_RS_I1
FOREIGN KEY (CO_RS_I1) REFERENCES QUESTIONARIO(CO_QUEST);

ALTER TABLE NOTAS
ADD CONSTRAINT FK_CO_RS_I2
FOREIGN KEY (CO_RS_I2) REFERENCES QUESTIONARIO(CO_QUEST);

ALTER TABLE NOTAS
ADD CONSTRAINT FK_CO_RS_I3
FOREIGN KEY (CO_RS_I3) REFERENCES QUESTIONARIO(CO_QUEST);

ALTER TABLE NOTAS
ADD CONSTRAINT FK_CO_RS_I4
FOREIGN KEY (CO_RS_I4) REFERENCES QUESTIONARIO(CO_QUEST);

ALTER TABLE NOTAS
ADD CONSTRAINT FK_CO_RS_I5
FOREIGN KEY (CO_RS_I5) REFERENCES QUESTIONARIO(CO_QUEST);

ALTER TABLE NOTAS
ADD CONSTRAINT FK_CO_RS_I6
FOREIGN KEY (CO_RS_I6) REFERENCES QUESTIONARIO(CO_QUEST);

ALTER TABLE NOTAS
ADD CONSTRAINT FK_CO_RS_I7
FOREIGN KEY (CO_RS_I7) REFERENCES QUESTIONARIO(CO_QUEST);

ALTER TABLE NOTAS
ADD CONSTRAINT FK_CO_RS_I8
FOREIGN KEY (CO_RS_I8) REFERENCES QUESTIONARIO(CO_QUEST);

ALTER TABLE NOTAS
ADD CONSTRAINT FK_CO_RS_I9
FOREIGN KEY (CO_RS_I9) REFERENCES QUESTIONARIO(CO_QUEST);